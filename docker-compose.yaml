services:
  db:
    container_name: db
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
  backend:
    container_name: backend
    image: backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      DRIZZLE_OUT: ${DRIZZLE_OUT}
      DRIZZLE_SCHEMA: ${DRIZZLE_SCHEMA}
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
  frontend:
    container_name: frontend
    image: frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_BACKEND_URL: ${VITE_BACKEND_URL}
    ports:
      - 5173:5173
    depends_on:
      - backend
volumes:
  db_data:
